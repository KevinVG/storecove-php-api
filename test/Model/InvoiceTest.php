<?php
/**
 * InvoiceTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Storecove API
 *
 * Storecove API
 *
 * OpenAPI spec version: 2.0.1
 * Contact: apisupport@storecove.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * InvoiceTest Class Doc Comment
 *
 * @category    Class */
// * @description The invoice to send
/**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class InvoiceTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "Invoice"
     */
    public function testInvoice()
    {
    }

    /**
     * Test attribute "document_currency_code"
     */
    public function testPropertyDocumentCurrencyCode()
    {
    }

    /**
     * Test attribute "invoice_number"
     */
    public function testPropertyInvoiceNumber()
    {
    }

    /**
     * Test attribute "issue_date"
     */
    public function testPropertyIssueDate()
    {
    }

    /**
     * Test attribute "vat_reverse_charge"
     */
    public function testPropertyVatReverseCharge()
    {
    }

    /**
     * Test attribute "accounting_customer_party"
     */
    public function testPropertyAccountingCustomerParty()
    {
    }

    /**
     * Test attribute "buyer_customer_party"
     */
    public function testPropertyBuyerCustomerParty()
    {
    }

    /**
     * Test attribute "note"
     */
    public function testPropertyNote()
    {
    }

    /**
     * Test attribute "delivery"
     */
    public function testPropertyDelivery()
    {
    }

    /**
     * Test attribute "allowance_charges"
     */
    public function testPropertyAllowanceCharges()
    {
    }

    /**
     * Test attribute "invoice_lines"
     */
    public function testPropertyInvoiceLines()
    {
    }

    /**
     * Test attribute "accounting_cost"
     */
    public function testPropertyAccountingCost()
    {
    }

    /**
     * Test attribute "accounting_cost_code"
     */
    public function testPropertyAccountingCostCode()
    {
    }

    /**
     * Test attribute "due_date"
     */
    public function testPropertyDueDate()
    {
    }

    /**
     * Test attribute "invoice_type"
     */
    public function testPropertyInvoiceType()
    {
    }

    /**
     * Test attribute "tax_point_date"
     */
    public function testPropertyTaxPointDate()
    {
    }

    /**
     * Test attribute "buyer_reference"
     */
    public function testPropertyBuyerReference()
    {
    }

    /**
     * Test attribute "invoice_period"
     */
    public function testPropertyInvoicePeriod()
    {
    }

    /**
     * Test attribute "order_reference"
     */
    public function testPropertyOrderReference()
    {
    }

    /**
     * Test attribute "sales_order_id"
     */
    public function testPropertySalesOrderId()
    {
    }

    /**
     * Test attribute "billing_reference"
     */
    public function testPropertyBillingReference()
    {
    }

    /**
     * Test attribute "contract_document_reference"
     */
    public function testPropertyContractDocumentReference()
    {
    }

    /**
     * Test attribute "project_reference"
     */
    public function testPropertyProjectReference()
    {
    }

    /**
     * Test attribute "payment_means_iban"
     */
    public function testPropertyPaymentMeansIban()
    {
    }

    /**
     * Test attribute "payment_means_code"
     */
    public function testPropertyPaymentMeansCode()
    {
    }

    /**
     * Test attribute "payment_means_payment_id"
     */
    public function testPropertyPaymentMeansPaymentId()
    {
    }

    /**
     * Test attribute "amount_including_vat"
     */
    public function testPropertyAmountIncludingVat()
    {
    }
}
