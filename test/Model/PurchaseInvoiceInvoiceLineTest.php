<?php
/**
 * PurchaseInvoiceInvoiceLineTest
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Storecove API
 *
 * Storecove API
 *
 * OpenAPI spec version: 2.0.1
 * Contact: apisupport@storecove.nl
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Please update the test case below to test the model.
 */

namespace Swagger\Client;

/**
 * PurchaseInvoiceInvoiceLineTest Class Doc Comment
 *
 * @category    Class */
// * @description PurchaseInvoiceInvoiceLine
/**
 * @package     Swagger\Client
 * @author      Swagger Codegen team
 * @link        https://github.com/swagger-api/swagger-codegen
 */
class PurchaseInvoiceInvoiceLineTest extends \PHPUnit_Framework_TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass()
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp()
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown()
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass()
    {
    }

    /**
     * Test "PurchaseInvoiceInvoiceLine"
     */
    public function testPurchaseInvoiceInvoiceLine()
    {
    }

    /**
     * Test attribute "description"
     */
    public function testPropertyDescription()
    {
    }

    /**
     * Test attribute "price_amount"
     */
    public function testPropertyPriceAmount()
    {
    }

    /**
     * Test attribute "quantity"
     */
    public function testPropertyQuantity()
    {
    }

    /**
     * Test attribute "allowance_charge"
     */
    public function testPropertyAllowanceCharge()
    {
    }

    /**
     * Test attribute "amount_excluding_vat"
     */
    public function testPropertyAmountExcludingVat()
    {
    }

    /**
     * Test attribute "vat"
     */
    public function testPropertyVat()
    {
    }

    /**
     * Test attribute "accounting"
     */
    public function testPropertyAccounting()
    {
    }
}
